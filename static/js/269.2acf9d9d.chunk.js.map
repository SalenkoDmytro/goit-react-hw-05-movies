{"version":3,"file":"static/js/269.2acf9d9d.chunk.js","mappings":"wMAGaA,EAAe,SAAAC,GAC1B,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAKA,OAHAC,EAAAA,EAAAA,YAAU,WACRN,EAAUC,GAAUM,KAAKF,EAC1B,GAAE,CAACJ,EAAUD,IACPI,CACR,C,8DCaD,UArBgB,WACd,IAAMI,GAAOT,EAAAA,EAAAA,GAAaU,EAAAA,IAC1B,OAAKD,GAEH,8BACGA,GAAQA,EAAKE,QAAQC,OAAS,GAC7B,wBACGH,EAAKE,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADO,OAQpB,uEAbY,IAiBnB,C","sources":["hooks/useFetchMovie.js","pages/MovieDetails/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchData = fetchData => {\n  const { moviesId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchData(moviesId).then(setMovie);\n  }, [moviesId, fetchData]);\n  return movie;\n};\n","import { useFetchData } from 'hooks/useFetchMovie';\nimport { fetchReviews } from 'service/fetchAPI';\n\nconst Reviews = () => {\n  const data = useFetchData(fetchReviews);\n  if (!data) return null;\n  return (\n    <>\n      {data && data.results.length > 0 ? (\n        <ul>\n          {data.results.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["useFetchData","fetchData","moviesId","useParams","useState","movie","setMovie","useEffect","then","data","fetchReviews","results","length","map","id","author","content"],"sourceRoot":""}